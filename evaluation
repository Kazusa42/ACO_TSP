import numpy as np

from acos import CITIES_FILE_PATH, SolveTSPUsingACO

import numpy
import math
from matplotlib import pyplot as plt


def get_mean_result(result_list, epcho_mean, epcho_best, _mode='ACS', epchos=20):
    for epcho in range(epchos):
        algorithm = SolveTSPUsingACO(mode=_mode, colony_size=_colony_size, steps=_iter, nodes=_nodes)
        algorithm.run(result_list, epcho_mean, epcho_best)
    print('mean of ' + _mode + ': ' + str(round(np.mean(result_list), 2)))
    print('variance of ' + _mode + ': ' + str(round(np.var(result_list), 2)))
    print('best result of ' + _mode + ': ' + str(round(np.min(result_list), 2)))
    print('worst result of ' + _mode + ': ' + str(round(np.max(result_list), 2)))


def draw_curve(result_list, epcho_mean, epcho_best, _mode='ACS'):
    algorithm1 = SolveTSPUsingACO(mode=_mode, colony_size=_colony_size, steps=_iter, nodes=_nodes)
    algorithm1.run(result_list, epcho_mean, epcho_best)
    plt.plot(_steps, epcho_best, color='#DC143C', label='best dis')
    plt.plot(_steps, epcho_mean, color='#708090', label='mean dis')
    plt.legend(fontsize=16)
    plt.xlabel(xlabel='Iteration', fontsize=24)
    plt.title('Distance', fontsize=24)
    plt.show()


if __name__ == '__main__':
    _nodes = []
    with open(CITIES_FILE_PATH, 'r') as f:
        for line in f.readlines():
            if line[0] != '#':
                x = float(line.strip('\n').split(' ')[1])
                y = float(line.strip('\n').split(' ')[2])
                _nodes.append((x, y))

    _colony_size = 15
    _iter = 500
    _steps = [i for i in range(_iter)]

    acs_result, acs_epcho_best, acs_epcho_mean = [], [], []
    elitist_result, elitist_epcho_best, elitist_epcho_mean = [], [], []
    mm_result, mm_epcho_best, mm_epcho_mean = [], [], []

    acs_cube_result, acs_cube_epcho_best, acs_cube_epcho_mean = [], [], []
    acs_exp_result, acs_exp_epcho_best, acs_exp_epcho_mean = [], [], []

    # draw_curve(acs_result, acs_epcho_mean, acs_epcho_best)
    draw_curve(acs_cube_result, acs_cube_epcho_mean, acs_cube_epcho_best, _mode='ACS_CUBE')

    # get_mean_result(acs_result, acs_epcho_mean, acs_epcho_best)
    # get_mean_result(acs_exp_result, acs_exp_epcho_mean, acs_exp_epcho_best, _mode='ACS_EXP')
    # get_mean_result(acs_cube_result, acs_cube_epcho_mean, acs_cube_epcho_best, _mode='ACS_CUBE')
    # get_mean_result(mm_result, mm_epcho_mean, mm_epcho_best, _mode='max min')
    # get_mean_result(elitist_result, elitist_epcho_mean, elitist_epcho_best, _mode='Elitist')

